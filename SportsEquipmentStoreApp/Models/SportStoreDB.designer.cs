#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SportsEquipmentStoreApp.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SportStoreDB")]
	public partial class SportStoreDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertShoe(Shoe instance);
    partial void UpdateShoe(Shoe instance);
    partial void DeleteShoe(Shoe instance);
    partial void InsertClothing(Clothing instance);
    partial void UpdateClothing(Clothing instance);
    partial void DeleteClothing(Clothing instance);
    partial void InsertSportsClub(SportsClub instance);
    partial void UpdateSportsClub(SportsClub instance);
    partial void DeleteSportsClub(SportsClub instance);
    partial void InsertsportsEquipment(sportsEquipment instance);
    partial void UpdatesportsEquipment(sportsEquipment instance);
    partial void DeletesportsEquipment(sportsEquipment instance);
    #endregion
		
		public SportStoreDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SportStoreDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SportStoreDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SportStoreDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SportStoreDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SportStoreDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Shoe> Shoes
		{
			get
			{
				return this.GetTable<Shoe>();
			}
		}
		
		public System.Data.Linq.Table<Clothing> Clothings
		{
			get
			{
				return this.GetTable<Clothing>();
			}
		}
		
		public System.Data.Linq.Table<SportsClub> SportsClubs
		{
			get
			{
				return this.GetTable<SportsClub>();
			}
		}
		
		public System.Data.Linq.Table<sportsEquipment> sportsEquipments
		{
			get
			{
				return this.GetTable<sportsEquipment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shoes")]
	public partial class Shoe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ShoeType;
		
		private string _Company;
		
		private string _Model;
		
		private System.Nullable<int> _Price;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<bool> _IsOnSale;
		
		private string _ImageLink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnShoeTypeChanging(string value);
    partial void OnShoeTypeChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnIsOnSaleChanging(System.Nullable<bool> value);
    partial void OnIsOnSaleChanged();
    partial void OnImageLinkChanging(string value);
    partial void OnImageLinkChanged();
    #endregion
		
		public Shoe()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoeType", DbType="VarChar(50)")]
		public string ShoeType
		{
			get
			{
				return this._ShoeType;
			}
			set
			{
				if ((this._ShoeType != value))
				{
					this.OnShoeTypeChanging(value);
					this.SendPropertyChanging();
					this._ShoeType = value;
					this.SendPropertyChanged("ShoeType");
					this.OnShoeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(50)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnSale", DbType="Bit")]
		public System.Nullable<bool> IsOnSale
		{
			get
			{
				return this._IsOnSale;
			}
			set
			{
				if ((this._IsOnSale != value))
				{
					this.OnIsOnSaleChanging(value);
					this.SendPropertyChanging();
					this._IsOnSale = value;
					this.SendPropertyChanged("IsOnSale");
					this.OnIsOnSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageLink", DbType="VarChar(MAX)")]
		public string ImageLink
		{
			get
			{
				return this._ImageLink;
			}
			set
			{
				if ((this._ImageLink != value))
				{
					this.OnImageLinkChanging(value);
					this.SendPropertyChanging();
					this._ImageLink = value;
					this.SendPropertyChanged("ImageLink");
					this.OnImageLinkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clothing")]
	public partial class Clothing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TypeOfClothing;
		
		private string _Gender;
		
		private string _Company;
		
		private string _Model;
		
		private System.Nullable<int> _Price;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<bool> _IsItShort;
		
		private System.Nullable<bool> _IsItDreyfit;
		
		private string _ImageLink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeOfClothingChanging(string value);
    partial void OnTypeOfClothingChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnIsItShortChanging(System.Nullable<bool> value);
    partial void OnIsItShortChanged();
    partial void OnIsItDreyfitChanging(System.Nullable<bool> value);
    partial void OnIsItDreyfitChanged();
    partial void OnImageLinkChanging(string value);
    partial void OnImageLinkChanged();
    #endregion
		
		public Clothing()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfClothing", DbType="VarChar(50)")]
		public string TypeOfClothing
		{
			get
			{
				return this._TypeOfClothing;
			}
			set
			{
				if ((this._TypeOfClothing != value))
				{
					this.OnTypeOfClothingChanging(value);
					this.SendPropertyChanging();
					this._TypeOfClothing = value;
					this.SendPropertyChanged("TypeOfClothing");
					this.OnTypeOfClothingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(50)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsItShort", DbType="Bit")]
		public System.Nullable<bool> IsItShort
		{
			get
			{
				return this._IsItShort;
			}
			set
			{
				if ((this._IsItShort != value))
				{
					this.OnIsItShortChanging(value);
					this.SendPropertyChanging();
					this._IsItShort = value;
					this.SendPropertyChanged("IsItShort");
					this.OnIsItShortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsItDreyfit", DbType="Bit")]
		public System.Nullable<bool> IsItDreyfit
		{
			get
			{
				return this._IsItDreyfit;
			}
			set
			{
				if ((this._IsItDreyfit != value))
				{
					this.OnIsItDreyfitChanging(value);
					this.SendPropertyChanging();
					this._IsItDreyfit = value;
					this.SendPropertyChanged("IsItDreyfit");
					this.OnIsItDreyfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageLink", DbType="VarChar(MAX)")]
		public string ImageLink
		{
			get
			{
				return this._ImageLink;
			}
			set
			{
				if ((this._ImageLink != value))
				{
					this.OnImageLinkChanging(value);
					this.SendPropertyChanging();
					this._ImageLink = value;
					this.SendPropertyChanged("ImageLink");
					this.OnImageLinkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SportsClubs")]
	public partial class SportsClub : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ClubName;
		
		private EntitySet<sportsEquipment> _sportsEquipments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnClubNameChanging(string value);
    partial void OnClubNameChanged();
    #endregion
		
		public SportsClub()
		{
			this._sportsEquipments = new EntitySet<sportsEquipment>(new Action<sportsEquipment>(this.attach_sportsEquipments), new Action<sportsEquipment>(this.detach_sportsEquipments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClubName", DbType="VarChar(50)")]
		public string ClubName
		{
			get
			{
				return this._ClubName;
			}
			set
			{
				if ((this._ClubName != value))
				{
					this.OnClubNameChanging(value);
					this.SendPropertyChanging();
					this._ClubName = value;
					this.SendPropertyChanged("ClubName");
					this.OnClubNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SportsClub_sportsEquipment", Storage="_sportsEquipments", ThisKey="Id", OtherKey="SportsClubId")]
		public EntitySet<sportsEquipment> sportsEquipments
		{
			get
			{
				return this._sportsEquipments;
			}
			set
			{
				this._sportsEquipments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sportsEquipments(sportsEquipment entity)
		{
			this.SendPropertyChanging();
			entity.SportsClub = this;
		}
		
		private void detach_sportsEquipments(sportsEquipment entity)
		{
			this.SendPropertyChanging();
			entity.SportsClub = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sportsEquipment")]
	public partial class sportsEquipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SportType;
		
		private string _ProductName;
		
		private string _Company;
		
		private System.Nullable<int> _Price;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<int> _SportsClubId;
		
		private string _ImageLink;
		
		private EntityRef<SportsClub> _SportsClub;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSportTypeChanging(string value);
    partial void OnSportTypeChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnSportsClubIdChanging(System.Nullable<int> value);
    partial void OnSportsClubIdChanged();
    partial void OnImageLinkChanging(string value);
    partial void OnImageLinkChanged();
    #endregion
		
		public sportsEquipment()
		{
			this._SportsClub = default(EntityRef<SportsClub>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SportType", DbType="VarChar(50)")]
		public string SportType
		{
			get
			{
				return this._SportType;
			}
			set
			{
				if ((this._SportType != value))
				{
					this.OnSportTypeChanging(value);
					this.SendPropertyChanging();
					this._SportType = value;
					this.SendPropertyChanged("SportType");
					this.OnSportTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(50)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(50)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SportsClubId", DbType="Int")]
		public System.Nullable<int> SportsClubId
		{
			get
			{
				return this._SportsClubId;
			}
			set
			{
				if ((this._SportsClubId != value))
				{
					if (this._SportsClub.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSportsClubIdChanging(value);
					this.SendPropertyChanging();
					this._SportsClubId = value;
					this.SendPropertyChanged("SportsClubId");
					this.OnSportsClubIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageLink", DbType="VarChar(MAX)")]
		public string ImageLink
		{
			get
			{
				return this._ImageLink;
			}
			set
			{
				if ((this._ImageLink != value))
				{
					this.OnImageLinkChanging(value);
					this.SendPropertyChanging();
					this._ImageLink = value;
					this.SendPropertyChanged("ImageLink");
					this.OnImageLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SportsClub_sportsEquipment", Storage="_SportsClub", ThisKey="SportsClubId", OtherKey="Id", IsForeignKey=true)]
		public SportsClub SportsClub
		{
			get
			{
				return this._SportsClub.Entity;
			}
			set
			{
				SportsClub previousValue = this._SportsClub.Entity;
				if (((previousValue != value) 
							|| (this._SportsClub.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SportsClub.Entity = null;
						previousValue.sportsEquipments.Remove(this);
					}
					this._SportsClub.Entity = value;
					if ((value != null))
					{
						value.sportsEquipments.Add(this);
						this._SportsClubId = value.Id;
					}
					else
					{
						this._SportsClubId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SportsClub");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
